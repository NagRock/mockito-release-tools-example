apply plugin: "org.mockito.mockito-release-tools.continuous-delivery"

//TODO let's make this project use all possible configuration options
//and create a separate example project that would rely on default (minimum example)
releasing {
    gitHub.repository = "mockito/mockito-release-tools-example"
    gitHub.writeAuthUser = "szczepiq"
    gitHub.writeAuthToken = System.getenv("GH_WRITE_TOKEN")
    gitHub.readOnlyAuthToken = "e7fe8fcdd6ffed5c38498c4c79b2a68e6f6ed1bb"

    git.user = "Mockito Release Tools"
    git.email = "<mockito.release.tools@gmail.com>"
    git.releasableBranchRegex = "master|release/.+" // matches 'master', 'release/2.x', 'release/3.x', etc.

    def buildNo = System.getenv("TRAVIS_BUILD_NUMBER")
    git.commitMessagePostfix = buildNo? " by CI build $buildNo [ci skip-release]" : " [ci skip-release]"

    releaseNotes.file = "docs/release-notes.md"
    releaseNotes.ignoreCommitsContaining = ["[ci skip]"]
    releaseNotes.notableFile = "docs/notable-release-notes.md"
    releaseNotes.labelMapping = ["noteworthy": "Noteworthy", "bugfix": "Bugfixes"]

    team.developers = ['szczepiq:Szczepan Faber']
    team.contributors = ['mstachniuk:Marcin Stachniuk', 'wwilk:Wojtek Wilk']
}

allprojects {
    plugins.withId("org.mockito.mockito-release-tools.bintray") {
        bintray {
            key = System.getenv("BINTRAY_API_KEY")
            pkg {
                repo = 'examples'
                user = 'szczepiq'
                userOrg = 'shipkit'
                name = rootProject.releasing.notableRelease? "basic-notable-versions" : "basic-all-versions"
                licenses = ['MIT']
                labels = ['continuous delivery', 'release automation', 'mockito', 'mockito-release-tools', 'shipkit']
            }
        }
    }
}